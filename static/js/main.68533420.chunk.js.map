{"version":3,"sources":["resources/pokeball_PNG19.png","reducers/index.js","Components/NavBar/NavBar.jsx","Components/Card/Card.jsx","Components/Home/Home.jsx","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducer","state","action","type","pokeList","payload","data","search","NavBar","props","isOpen","Navbar","color","light","expand","NavbarBrand","style","width","height","className","alt","src","iconPokeball","objectFit","Component","Card","_getPokeData","pokeData","fetch","url","then","response","json","r","push","setState","this","length","boxShadow","name","sprites","front_default","Object","values","types","map","key","Home","_getDataList","a","async","api","setPaginator","_setChangePage","_search","value","toLowerCase","trim","setSearch","alert","FormGroup","Input","onKeyDown","e","keyCode","target","placeholder","results","Button","disabled","previous","onClick","_","next","mapDispatchToProps","connect","App","estadoApp","componentDidMount","path","component","tryal","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68533420.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball_PNG19.09a6ae93.png\";","const reducer = (state, action) => {\r\n    // return state;\r\n    switch (action.type) {\r\n        case 'SET_SEARCH':\r\n            return {\r\n                ...state,\r\n                pokeList: action.payload.data,\r\n                search: action.payload.search\r\n            }\r\n            break;\r\n        case 'SET_PAGINATOR':\r\n            // console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                pokeList: action.payload.data,\r\n                search: action.payload.search\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    NavbarText\r\n} from 'reactstrap';\r\nimport iconPokeball from '../../resources/pokeball_PNG19.png'\r\n\r\nexport class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            isOpen: true\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand>Pokédex</NavbarBrand>\r\n                <div style={{ width: '2rem', height: '2rem' }} className='d-flex justify-content-center align-items-center'>\r\n                    <img alt='Pokédex' src={iconPokeball} style={{ objectFit: 'contain' }} className='h-100 w-100'></img>\r\n                </div>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.search) {\r\n            this._getPokeData()\r\n        }\r\n    }\r\n    _getPokeData = () => {\r\n        var pokeData = [];\r\n        fetch(this.props.data.url)\r\n            .then(response => response.json())\r\n            .then(r => {\r\n                pokeData.push(r)\r\n                this.setState({\r\n                    data: pokeData\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            this.state.data.length !== 0 ? (\r\n                <div style={{ boxShadow: '0px 0px 1px 2px gray' }} className='d-flex justify-content-between my-2 p-2 align-items-center'>\r\n                    <div className='d-flex flex-column flex-lg-row justify-content-between align-items-center'>\r\n                        {this.props.search ? (\r\n                            <>\r\n                                <img alt={this.props.data.name} src={this.props.data.sprites.front_default}></img>\r\n                                <div>\r\n                                    {this.props.data.name}\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <img alt={this.state.data[0].name} src={this.state.data[0].sprites.front_default}></img>\r\n                                    <div>\r\n                                        {this.state.data[0].name}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n\r\n                    </div>\r\n                    <div className='d-flex flex-column flex-lg-row justify-content-between'>\r\n                        {this.props.search ? (\r\n                            Object.values(this.props.data.types).map(r =>\r\n                                <div className='py-1 px-5 mx-2 contain-type' key={`${this.props.data.name} ${r.type.name}`}>\r\n                                    {r.type.name}\r\n                                </div>\r\n                            )\r\n                        ) : (\r\n                                Object.values(this.state.data[0].types).map(r =>\r\n                                    <div className='py-1 px-5 mx-2 contain-type' key={`${this.props.data.name} ${r.type.name}`}>\r\n                                        {r.type.name}\r\n                                    </div>\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            ) : (null)\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Card from '../Card/Card';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { setSearch, setPaginator } from '../../actions'\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nexport class Home extends Component {\r\n    componentDidMount() {\r\n        this._getDataList()\r\n    }\r\n\r\n    _getDataList = async (url = this.props.api) => {\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        this.props.setPaginator({\r\n            data,\r\n            search: false\r\n        })\r\n    }\r\n\r\n    _setChangePage = async (url) => {\r\n        let response = await fetch(url);\r\n        let data = await response.json();\r\n        this.props.setPaginator({\r\n            data,\r\n            search: false\r\n        })\r\n    }\r\n\r\n    _search = async (value) => {\r\n        if (value !== '') {\r\n            try {\r\n                let response = await fetch(`${this.props.api}/${value.toLowerCase().trim()}`);\r\n                let data = await response.json();\r\n                this.props.setSearch({\r\n                    data,\r\n                    search: true\r\n                })\r\n            } catch (error) {\r\n                alert('No hay ningun Pokémon con ese nombre')\r\n            }\r\n        } else {\r\n            this._getDataList()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.pokeList !== null ? (\r\n                    <>\r\n                        <NavBar></NavBar>\r\n                        <FormGroup className='d-flex justify-content-end'>\r\n                            <Input onKeyDown={e => e.keyCode === 13 ? this._search(e.target.value) : null} className='w-50 my-4 mx-2' type=\"text\" name=\"Search\" placeholder=\"Search\" />\r\n                        </FormGroup>\r\n                        <div className='px-3'>\r\n\r\n                            {this.props.search ? (\r\n                                <Card search={this.props.search} key={this.props.pokeList.name} data={this.props.pokeList}></Card>\r\n                            ) : (\r\n                                    this.props.pokeList.results.map(r =>\r\n                                        <Card search={this.props.search} key={r.name} data={r}></Card>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className='my-4 d-flex justify-content-end align-items-center px-3'>\r\n                            <Button disabled={this.props.pokeList.previous != null ? false : true} color='primary' onClick={_ => this._setChangePage(this.props.pokeList.previous)}>\r\n                                Previus\r\n                            </Button>\r\n                            <Button disabled={this.props.pokeList.next != null ? false : true} className='ml-2' color='primary' onClick={_ => this._setChangePage(this.props.pokeList.next)}>\r\n                                Next\r\n                            </Button>\r\n                        </div>\r\n                    </>\r\n                ) : (null)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setPaginator, setSearch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","export const setSearch = payload => ({\r\n    type: 'SET_SEARCH',\r\n    payload\r\n});\r\nexport const setPaginator = payload => ({\r\n    type: 'SET_PAGINATOR',\r\n    payload\r\n});","import React, { Component } from 'react'\n// import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './Components/Home/Home.jsx';\nimport { connect } from 'react-redux';\n\nexport class App extends Component {\n  state = {\n    estadoApp: 'Hola'\n  }\n  componentDidMount = () => {\n    // console.log(this.props)\n  };\n\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" component={Home} />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    tryal: state\n  }\n}\n\nexport default connect(mapStateToProps, null)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n\nconst initialState = {\n    'api': 'https://pokeapi.co/api/v2/pokemon',\n    'pokeList': null,\n    'list': [],\n    'search': false\n}\n\nconst store = createStore(reducer, initialState);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}